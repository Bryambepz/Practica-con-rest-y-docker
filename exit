[1mdiff --git a/.settings/org.eclipse.wst.common.component b/.settings/org.eclipse.wst.common.component[m
[1mindex 90e8dc7..81a07b7 100644[m
[1m--- a/.settings/org.eclipse.wst.common.component[m
[1m+++ b/.settings/org.eclipse.wst.common.component[m
[36m@@ -1,12 +1,32 @@[m
 <?xml version="1.0" encoding="UTF-8"?><project-modules id="moduleCoreId" project-version="1.5.0">[m
[32m+[m[41m            [m
[32m+[m[41m    [m
     <wb-module deploy-name="practicaRestDocker">[m
[32m+[m[41m                        [m
[32m+[m[41m        [m
         <wb-resource deploy-path="/" source-path="/target/m2e-wtp/web-resources"/>[m
[32m+[m[41m                        [m
[32m+[m[41m        [m
         <wb-resource deploy-path="/" source-path="/src/main/webapp" tag="defaultRootSource"/>[m
[32m+[m[41m                        [m
[32m+[m[41m        [m
         <wb-resource deploy-path="/WEB-INF/classes" source-path="/src/main/java"/>[m
[32m+[m[41m                        [m
[32m+[m[41m        [m
         <wb-resource deploy-path="/WEB-INF/classes" source-path="/src/main/resources"/>[m
[32m+[m[41m                        [m
[32m+[m[41m        [m
         <wb-resource deploy-path="/WEB-INF/classes" source-path="/target/generated-sources/annotations"/>[m
[32m+[m[41m                        [m
[32m+[m[41m        [m
         <wb-resource deploy-path="/WEB-INF/classes" source-path="/target/generated-test-sources/test-annotations"/>[m
[31m-        <property name="context-root" value="practicaRestDocker"/>[m
[32m+[m[41m                        [m
[32m+[m[41m        [m
         <property name="java-output-path" value="/practicaRestDocker/target/classes"/>[m
[32m+[m[32m        <property name="context-root" value="practicaRestDocker"/>[m
[32m+[m[41m                    [m
[32m+[m[41m    [m
     </wb-module>[m
[32m+[m[41m        [m
[32m+[m
 </project-modules>[m
[1mdiff --git a/.settings/org.jboss.ide.eclipse.as.core.prefs b/.settings/org.jboss.ide.eclipse.as.core.prefs[m
[1mnew file mode 100644[m
[1mindex 0000000..cf3aa3a[m
[1m--- /dev/null[m
[1m+++ b/.settings/org.jboss.ide.eclipse.as.core.prefs[m
[36m@@ -0,0 +1,2 @@[m
[32m+[m[32meclipse.preferences.version=1[m
[32m+[m[32morg.jboss.ide.eclipse.as.core.singledeployable.deployableList=[m
[1mdiff --git a/pom.xml b/pom.xml[m
[1mindex b7b6a30..2e85aed 100644[m
[1m--- a/pom.xml[m
[1m+++ b/pom.xml[m
[36m@@ -4,7 +4,6 @@[m
     Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual[m
     contributors by the @authors tag. See the copyright.txt in the[m
     distribution for a full listing of individual contributors.[m
[31m-[m
     Licensed under the Apache License, Version 2.0 (the "License");[m
     you may not use this file except in compliance with the License.[m
     You may obtain a copy of the License at[m
[36m@@ -19,11 +18,11 @@[m
          xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">[m
     <modelVersion>4.0.0</modelVersion>[m
     <groupId>ec.edu.ups.sd</groupId>[m
[31m-    <artifactId>practicaRestDocker</artifactId>[m
[32m+[m[32m    <artifactId>practicarestdocker</artifactId>[m
     <version>0.0.1-SNAPSHOT</version>[m
     [m
     <packaging>war</packaging>[m
[31m-    <name>practicaRestDocker</name>[m
[32m+[m[32m    <name>practicarestdocker</name>[m
     <description>Insert description for your project here.</description>[m
 [m
     <properties>[m
[36m@@ -47,6 +46,8 @@[m
 [m
         <!-- maven-compiler-plugin -->[m
         <maven.compiler.release>11</maven.compiler.release>[m
[32m+[m[41m        [m
[32m+[m[32m        <company>sd</company>[m
     </properties>[m
 [m
     <!-- the JBoss community and Red Hat GA Maven repositories -->[m
[36m@@ -212,6 +213,48 @@[m
                 <artifactId>wildfly-maven-plugin</artifactId>[m
                 <version>${version.wildfly.maven.plugin}</version>[m
             </plugin>[m
[32m+[m[41m            [m
[32m+[m[32m            <plugin>[m
[32m+[m					[32m<groupId>io.fabric8</groupId>[m
[32m+[m					[32m<artifactId>docker-maven-plugin</artifactId>[m
[32m+[m					[32m<version>0.33.0</version>[m
[32m+[m					[32m<configuration>[m
[32m+[m						[32m<images>[m
[32m+[m							[32m<image>[m
[32m+[m								[32m<name>${company}/${project.artifactId}</name>[m
[32m+[m								[32m<alias>${project.artifactId}</alias>[m
[32m+[m								[32m<build>[m
[32m+[m									[32m<tags>[m
[32m+[m										[32m<tag>latest</tag>[m
[32m+[m									[32m</tags>[m
[32m+[m									[32m<contextDir>${project.basedir}/src/main/docker</contextDir>[m
[32m+[m									[32m<assembly>[m
[32m+[m										[32m<mode>dir</mode>[m
[32m+[m										[32m<name>maven/</name>[m
[32m+[m										[32m<inline>[m
[32m+[m											[32m<files>[m
[32m+[m												[32m<file>[m
[32m+[m													[32m<source>[m
[32m+[m														[32m${project.build.directory}/${project.build.finalName}.${project.packaging}[m
[32m+[m													[32m</source>[m
[32m+[m													[32m<outputDirectory>.</outputDirectory>[m
[32m+[m												[32m</file>[m
[32m+[m											[32m</files>[m
[32m+[m										[32m</inline>[m
[32m+[m									[32m</assembly>[m
[32m+[m								[32m</build>[m
[32m+[m								[32m<run>[m
[32m+[m									[32m<ports>[m
[32m+[m										[32m<port>8080:8080</port>[m
[32m+[m										[32m<port>9990:9990</port>[m
[32m+[m									[32m</ports>[m
[32m+[m								[32m</run>[m
[32m+[m							[32m</image>[m
[32m+[m						[32m</images>[m
[32m+[m					[32m</configuration>[m
[32m+[m				[32m</plugin>[m
[32m+[m[41m            [m
[32m+[m[41m            [m
         </plugins>[m
     </build>[m
 [m
[36m@@ -301,4 +344,4 @@[m
         </profile>[m
     </profiles>[m
 [m
[31m-</project>[m
[32m+[m[32m</project>[m
\ No newline at end of file[m
[1mdiff --git a/src/main/docker/Dockerfile b/src/main/docker/Dockerfile[m
[1mnew file mode 100644[m
[1mindex 0000000..90dd2fa[m
[1m--- /dev/null[m
[1m+++ b/src/main/docker/Dockerfile[m
[36m@@ -0,0 +1,47 @@[m
[32m+[m[32mFROM jboss/wildfly[m
[32m+[m[32mENV WILDFLY_USER user[m
[32m+[m[32mENV WILDFLY_PASS userPassword[m
[32m+[m
[32m+[m[32mENV DS_NAME practicaD[m
[32m+[m[32mENV DS_USER practicaDocker[m
[32m+[m[32mENV DS_PASS root[m
[32m+[m[32mENV DS_URI jdbc:postgresql://srvdb/practicaD[m
[32m+[m
[32m+[m[32mENV JBOSS_CLI $JBOSS_HOME/bin/jboss-cli.sh[m
[32m+[m[32mENV DEPLOYMENT_DIR $JBOSS_HOME/standalone/deployments/[m
[32m+[m
[32m+[m[32mRUN echo "Adding WildFly administrator"[m
[32m+[m[32mRUN $JBOSS_HOME/bin/add-user.sh -u $WILDFLY_USER -p $WILDFLY_PASS --silent[m
[32m+[m
[32m+[m[32m# Configure Wildfly server[m
[32m+[m[32mRUN echo "Starting WildFly server" && \[m
[32m+[m[32m      bash -c '$JBOSS_HOME/bin/standalone.sh -c standalone.xml &' && \[m
[32m+[m[32m      bash -c 'until `$JBOSS_CLI -c ":read-attribute(name=server-state)" 2> /dev/null | grep -q running`; do echo `$JBOSS_CLI -c ":read-attribute(name=server-state)" 2> /dev/null`; sleep 1; done' && \[m
[32m+[m[32m      curl --location --output /tmp/postgresql-42.2.16.jar --url https://jdbc.postgresql.org/download/postgresql-42.2.16.jar && \[m
[32m+[m[32m      $JBOSS_CLI --connect --command="/extension=org.wildfly.extension.microprofile.openapi-smallrye:add" && \[m
[32m+[m[32m      $JBOSS_CLI --connect --command="/subsystem=microprofile-openapi-smallrye:add" && \[m
[32m+[m[32m      $JBOSS_CLI --connect --command="/subsystem=undertow/server=default-server/ajp-listener=ajp-listener:add(socket-binding=ajp, scheme=https, enabled=true)" && \[m
[32m+[m[32m      $JBOSS_CLI --connect --command="/subsystem=undertow:write-attribute(name=statistics-enabled,value=true)" && \[m
[32m+[m[32m      $JBOSS_CLI --connect --command="module add --name=org.postgres --resources=/tmp/postgresql-42.2.16.jar --dependencies=javax.api,javax.transaction.api" && \[m
[32m+[m[32m      $JBOSS_CLI --connect --command="/subsystem=datasources/jdbc-driver=postgres:add(driver-name="postgres",driver-module-name="org.postgres",driver-class-name=org.postgresql.Driver)" && \[m
[32m+[m[32m      $JBOSS_CLI --connect --command="data-source add \[m
[32m+[m[32m        --name=${DS_NAME} \[m
[32m+[m[32m        --jndi-name=java:jboss/datasources/${DS_NAME} \[m
[32m+[m[32m        --user-name=${DS_USER} \[m
[32m+[m[32m        --password=${DS_PASS} \[m
[32m+[m[32m        --driver-name=postgres \[m
[32m+[m[32m        --connection-url=${DS_URI} \[m
[32m+[m[32m        --min-pool-size=10 \[m
[32m+[m[32m        --max-pool-size=20 \[m
[32m+[m[32m        --blocking-timeout-wait-millis=5000 \[m
[32m+[m[32m        --statistics-enabled=true \[m
[32m+[m[32m        --enabled=true" && \[m
[32m+[m[32m      $JBOSS_CLI --connect --command=":shutdown" && \[m
[32m+[m[32m      rm -rf $JBOSS_HOME/standalone/configuration/standalone_xml_history/ $JBOSS_HOME/standalone/log/* && \[m
[32m+[m[32m      rm -f /tmp/*.jar[m
[32m+[m
[32m+[m[32mCOPY maven/${project.build.finalName}.${project.packaging} ${JBOSS_HOME}/standalone/deployments/[m
[32m+[m[32mEXPOSE 8080[m
[32m+[m[32mEXPOSE 8009[m
[32m+[m[32mEXPOSE 9990[m
[32m+[m[32mCMD ["/opt/jboss/wildfly/bin/standalone.sh", "-c", "standalone.xml", "-b", "0.0.0.0", "-bmanagement", "0.0.0.0"][m
\ No newline at end of file[m
[1mdiff --git a/src/main/docker/docker-compose.yml b/src/main/docker/docker-compose.yml[m
[1mnew file mode 100644[m
[1mindex 0000000..7ec4401[m
[1m--- /dev/null[m
[1m+++ b/src/main/docker/docker-compose.yml[m
[36m@@ -0,0 +1,59 @@[m
[32m+[m[32mversion: '3.8'[m
[32m+[m
[32m+[m[32mservices:[m
[32m+[m[32m  srvdb:[m
[32m+[m[32m    image: postgres[m
[32m+[m[41m    [m
[32m+[m[32m    container_name: srvdb[m
[32m+[m[32m    hostname: srvdb[m
[32m+[m[32m    environment:[m
[32m+[m[32m      POSTGRES_USER: practicaDocker[m
[32m+[m[32m      POSTGRES_PASSWORD: root[m
[32m+[m[32m      POSTGRES_DB: practicaD[m
[32m+[m[32m      TZ:  America/Guayaquil[m
[32m+[m[32m    ports:[m
[32m+[m[32m      - 1234:5432[m
[32m+[m[32m    volumes:[m
[32m+[m[32m       - db:/var/lib/postgresql/data[m
[32m+[m
[32m+[m[32m  srvwildfly:[m
[32m+[m[32m    image: sd/practicarestdocker[m
[32m+[m[32m    container_name: srvwildfly[m
[32m+[m[32m    hostname: srvwildfly[m
[32m+[m[32m    environment:[m
[32m+[m[32m      TZ:  America/Guayaquil[m
[32m+[m[32m    ports:[m
[32m+[m[32m      - 8082:8080[m
[32m+[m[32m      - 8899:8009[m
[32m+[m[32m      - 9992:9990[m
[32m+[m[32m      - 8787:8787[m
[32m+[m[32m    command: /opt/jboss/wildfly/bin/standalone.sh -b 0.0.0.0 -c standalone.xml -bmanagement 0.0.0.0 --debug *:8787[m
[32m+[m[32m    depends_on:[m
[32m+[m[32m      - srvdb[m
[32m+[m[32m    networks:[m
[32m+[m[32m      - datalogger_net[m
[32m+[m
[32m+[m[32m  admin:[m
[32m+[m[32m    image: dpage/pgadmin4[m
[32m+[m[32m    environment:[m
[32m+[m[32m      PGADMIN_DEFAULT_EMAIL: info@jasoft.ec[m
[32m+[m[32m      PGADMIN_DEFAULT_PASSWORD: clave[m
[32m+[m[32m      TZ:  America/Guayaquil[m
[32m+[m[32m    ports:[m
[32m+[m[32m      - 5050:80[m
[32m+[m[32m    depends_on:[m
[32m+[m[32m      - srvdb[m
[32m+[m[32m    networks:[m
[32m+[m[32m      - datalogger_net[m
[32m+[m[41m  [m
[32m+[m[32mvolumes:[m
[32m+[m[32m  db:[m
[32m+[m[32m    driver: local[m
[32m+[m[32m    driver_opts:[m
[32m+[m[32m      o: bind[m
[32m+[m[32m      type: none[m
[32m+[m[32m      device: C:/Users/braya/db[m
[32m+[m[41m      [m
[32m+[m[41m      [m
[32m+[m[32mnetworks:[m
[32m+[m[32m  datalogger_net:[m
\ No newline at end of file[m
[1mdiff --git a/target/classes/ec/edu/ups/sd/DAO/AutosDAO.class b/target/classes/ec/edu/ups/sd/DAO/AutosDAO.class[m
[1mnew file mode 100644[m
[1mindex 0000000..1e99b59[m
Binary files /dev/null and b/target/classes/ec/edu/ups/sd/DAO/AutosDAO.class differ
[1mdiff --git a/target/classes/ec/edu/ups/sd/bussines/AutosOn.class b/target/classes/ec/edu/ups/sd/bussines/AutosOn.class[m
[1mnew file mode 100644[m
[1mindex 0000000..692bc6d[m
Binary files /dev/null and b/target/classes/ec/edu/ups/sd/bussines/AutosOn.class differ
[1mdiff --git a/target/classes/ec/edu/ups/sd/modelo/Autos.class b/target/classes/ec/edu/ups/sd/modelo/Autos.class[m
[1mnew file mode 100644[m
[1mindex 0000000..2254a2a[m
Binary files /dev/null and b/target/classes/ec/edu/ups/sd/modelo/Autos.class differ
[1mdiff --git a/target/classes/ec/edu/ups/sd/practicaRestDocker/Jsf23Activator.class b/target/classes/ec/edu/ups/sd/practicaRestDocker/Jsf23Activator.class[m
[1mindex c5a8bd4..f0eafc3 100644[m
Binary files a/target/classes/ec/edu/ups/sd/practicaRestDocker/Jsf23Activator.class and b/target/classes/ec/edu/ups/sd/practicaRestDocker/Jsf23Activator.class differ
[1mdiff --git a/target/classes/ec/edu/ups/sd/services/AppPath.class b/target/classes/ec/edu/ups/sd/services/AppPath.class[m
[1mnew file mode 100644[m
[1mindex 0000000..d720aa9[m
Binary files /dev/null and b/target/classes/ec/edu/ups/sd/services/AppPath.class differ
[1mdiff --git a/target/classes/ec/edu/ups/sd/services/AutoRest.class b/target/classes/ec/edu/ups/sd/services/AutoRest.class[m
[1mnew file mode 100644[m
[1mindex 0000000..b77fb9a[m
Binary files /dev/null and b/target/classes/ec/edu/ups/sd/services/AutoRest.class differ
[1mdiff --git a/target/classes/ec/edu/ups/sd/services/CORSFilter.class b/target/classes/ec/edu/ups/sd/services/CORSFilter.class[m
[1mnew file mode 100644[m
[1mindex 0000000..ac81927[m
Binary files /dev/null and b/target/classes/ec/edu/ups/sd/services/CORSFilter.class differ
[1mdiff --git a/target/docker/build.timestamp b/target/docker/build.timestamp[m
[1mnew file mode 100644[m
[1mindex 0000000..aada0b2[m
[1m--- /dev/null[m
[1m+++ b/target/docker/build.timestamp[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m1653102876035[m
\ No newline at end of file[m
[1mdiff --git a/target/docker/sd/practicarestdocker/build/Dockerfile b/target/docker/sd/practicarestdocker/build/Dockerfile[m
[1mnew file mode 100644[m
[1mindex 0000000..33acdfa[m
[1m--- /dev/null[m
[1m+++ b/target/docker/sd/practicarestdocker/build/Dockerfile[m
[36m@@ -0,0 +1,47 @@[m
[32m+[m[32mFROM jboss/wildfly[m
[32m+[m[32mENV WILDFLY_USER user[m
[32m+[m[32mENV WILDFLY_PASS userPassword[m
[32m+[m
[32m+[m[32mENV DS_NAME practicaD[m
[32m+[m[32mENV DS_USER practicaDocker[m
[32m+[m[32mENV DS_PASS root[m
[32m+[m[32mENV DS_URI jdbc:postgresql://srvdb/practicaD[m
[32m+[m
[32m+[m[32mENV JBOSS_CLI $JBOSS_HOME/bin/jboss-cli.sh[m
[32m+[m[32mENV DEPLOYMENT_DIR $JBOSS_HOME/standalone/deployments/[m
[32m+[m
[32m+[m[32mRUN echo "Adding WildFly administrator"[m
[32m+[m[32mRUN $JBOSS_HOME/bin/add-user.sh -u $WILDFLY_USER -p $WILDFLY_PASS --silent[m
[32m+[m
[32m+[m[32m# Configure Wildfly server[m
[32m+[m[32mRUN echo "Starting WildFly server" && \[m
[32m+[m[32m      bash -c '$JBOSS_HOME/bin/standalone.sh -c standalone.xml &' && \[m
[32m+[m[32m      bash -c 'until `$JBOSS_CLI -c ":read-attribute(name=server-state)" 2> /dev/null | grep -q running`; do echo `$JBOSS_CLI -c ":read-attribute(name=server-state)" 2> /dev/null`; sleep 1; done' && \[m
[32m+[m[32m      curl --location --output /tmp/postgresql-42.2.16.jar --url https://jdbc.postgresql.org/download/postgresql-42.2.16.jar && \[m
[32m+[m[32m      $JBOSS_CLI --connect --command="/extension=org.wildfly.extension.microprofile.openapi-smallrye:add" && \[m
[32m+[m[32m      $JBOSS_CLI --connect --command="/subsystem=microprofile-openapi-smallrye:add" && \[m
[32m+[m[32m      $JBOSS_CLI --connect --command="/subsystem=undertow/server=default-server/ajp-listener=ajp-listener:add(socket-binding=ajp, scheme=https, enabled=true)" && \[m
[32m+[m[32m      $JBOSS_CLI --connect --command="/subsystem=undertow:write-attribute(name=statistics-enabled,value=true)" && \[m
[32m+[m[32m      $JBOSS_CLI --connect --comman